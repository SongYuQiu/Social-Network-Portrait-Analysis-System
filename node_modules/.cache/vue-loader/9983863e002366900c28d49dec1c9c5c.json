{"remainingRequest":"/Users/justforstar/Desktop/GraduationProject/systemCode/front/vue-element-admin-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/justforstar/Desktop/GraduationProject/systemCode/front/vue-element-admin-master/src/views/table/weibo-user-table.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/justforstar/Desktop/GraduationProject/systemCode/front/vue-element-admin-master/src/views/table/weibo-user-table.vue","mtime":1620012761227},{"path":"/Users/justforstar/Desktop/GraduationProject/systemCode/front/vue-element-admin-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justforstar/Desktop/GraduationProject/systemCode/front/vue-element-admin-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/justforstar/Desktop/GraduationProject/systemCode/front/vue-element-admin-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justforstar/Desktop/GraduationProject/systemCode/front/vue-element-admin-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["weibo-user-table.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"weibo-user-table.vue","sourceRoot":"src/views/table","sourcesContent":["<template>\n  <div class=\"app-container\">\n\n    <panel-group :all_weibo_user_count=\"this.all_weibo_user_count\" :all_weibo_text_count=\"this.all_weibo_text_count\" :all_portrait_count=\"this.all_portrait_count\" />\n\n    <el-table\n      :key=\"tableKey\"\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 100%;\"\n      @sort-change=\"sortChange\"\n      v-loading.fullscreen.lock=\"fullscreenLoading\"\n      element-loading-text=\"画像生成中，请稍等......\"\n      element-loading-spinner=\"el-icon-loading\"\n      element-loading-background=\"rgba(255, 255, 255, 0.8)\"\n    >\n      <el-table-column label=\"ID\" prop=\"id\" align=\"center\" width=\"80\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.id }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"微博ID\" width=\"150px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.weibo_user_id }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"微博名\" width=\"250px\">\n        <template slot-scope=\"{row}\">\n          <span class=\"link-type\">{{ row.screen_name }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"爬取微博数\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.crawler_num }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"爬取起始日期\" min-width=\"125px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.since_date }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"上次爬取日期\" align=\"center\" min-width=\"125px\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.last_date }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"画像生成状态\" class-name=\"status-col\" width=\"120\">\n        <template slot-scope=\"{row}\">\n          <el-tag :type=\"row.portrait_status?'success':'warning'\">\n            {{ row.portrait_status }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" align=\"center\" width=\"230\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"{row,$index}\">\n          <el-button :disabled=\"row.portrait_status\" type=\"primary\" size=\"mini\" @click=\"handleUpdate(row.weibo_user_id)\">\n            生成\n          </el-button>\n          <el-button :disabled=\"!row.portrait_status\" size=\"mini\" type=\"success\" @click=\"handleModifyStatus(row.weibo_user_id)\">\n            查看\n          </el-button>\n          <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(row.weibo_user_id)\">\n            删除\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getList\" />\n  </div>\n</template>\n\n<script>\nimport { fetchPv, createArticle, updateArticle } from '@/api/article'\nimport { fetchList, deleteWeiboUser, createUserPortrait, fetchDataCount } from '@/api/weibo-user'\nimport waves from '@/directive/waves' // waves directive\nimport { parseTime } from '@/utils'\nimport Pagination from '@/components/Pagination/index' // secondary package based on el-pagination\nimport PanelGroup from '@/views/dashboard/admin/components/PanelGroup'\n\nconst calendarTypeOptions = [\n  { key: 'CN', display_name: 'China' },\n  { key: 'US', display_name: 'USA' },\n  { key: 'JP', display_name: 'Japan' },\n  { key: 'EU', display_name: 'Eurozone' }\n]\n\n// arr to obj, such as { CN : \"China\", US : \"USA\" }\nconst calendarTypeKeyValue = calendarTypeOptions.reduce((acc, cur) => {\n  acc[cur.key] = cur.display_name\n  return acc\n}, {})\n\nexport default {\n  name: 'ComplexTable',\n  components: { Pagination, PanelGroup },\n  directives: { waves },\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        published: 'success',\n        draft: 'info',\n        deleted: 'danger'\n      }\n      return statusMap[status]\n    },\n    typeFilter(type) {\n      return calendarTypeKeyValue[type]\n    }\n  },\n  data() {\n    return {\n      fullscreenLoading: false,\n      tableKey: 0,\n      list: null,\n      total: 0,\n      listLoading: false,\n      all_weibo_user_count:0,\n      all_weibo_text_count:0,\n      all_portrait_count:0,\n      listQuery: {\n        page: 1,\n        limit: 20,\n        importance: undefined,\n        title: undefined,\n        type: undefined,\n        sort: '+id'\n      },\n      importanceOptions: [1, 2, 3],\n      calendarTypeOptions,\n      sortOptions: [{ label: 'ID Ascending', key: '+id' }, { label: 'ID Descending', key: '-id' }],\n      statusOptions: ['published', 'draft', 'deleted'],\n      showReviewer: false,\n      temp: {\n        id: undefined,\n        importance: 1,\n        remark: '',\n        timestamp: new Date(),\n        title: '',\n        type: '',\n        status: 'published'\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: 'Edit',\n        create: 'Create'\n      },\n      dialogPvVisible: false,\n      pvData: [],\n      rules: {\n        type: [{ required: true, message: 'type is required', trigger: 'change' }],\n        timestamp: [{ type: 'date', required: true, message: 'timestamp is required', trigger: 'change' }],\n        title: [{ required: true, message: 'title is required', trigger: 'blur' }]\n      },\n      downloadLoading: false\n    }\n  },\n  created() {\n    this.getList()\n    this.get_all_data_count()\n  },\n  methods: {\n    getList() {\n      // this.listLoading = true\n      fetchList().then(response => {\n\n        this.list = response.data\n        for (let i =0;i<this.list.length;i++){\n          this.list[i][\"id\"]=i+1\n          this.list[i][\"since_date\"] = this.list[i][\"since_date\"].toString().split(\"T\")[0]\n          this.list[i][\"last_date\"] = this.list[i][\"last_date\"].toString().split(\"T\")[0]\n        }\n        for (let j=0;j<this.list.length;j++){\n          if (this.list[j][\"portrait_status\"]){\n            localStorage.setItem(\"weibo_user_id\",this.list[j]['weibo_user_id'])\n            break;\n          }\n        }\n\n      })\n    },\n    get_all_data_count(){\n      fetchDataCount().then(response => {\n        // console.log(response)\n        this.all_weibo_user_count = response.data.all_user_count\n        this.all_weibo_text_count = response.data.all_weibo_count\n        this.all_portrait_count = response.data.all_portrait_count\n      })\n    },\n    handleFilter() {\n      this.listQuery.page = 1\n      this.getList()\n    },\n    handleModifyStatus(weibo_user_id) {\n      localStorage.setItem(\"weibo_user_id\",weibo_user_id)\n      this.$router.push({ path: '/portrait/index'})\n    },\n    sortChange(data) {\n      const { prop, order } = data\n      if (prop === 'id') {\n        this.sortByID(order)\n      }\n    },\n    sortByID(order) {\n      if (order === 'ascending') {\n        this.listQuery.sort = '+id'\n      } else {\n        this.listQuery.sort = '-id'\n      }\n      this.handleFilter()\n    },\n    resetTemp() {\n      this.temp = {\n        id: undefined,\n        importance: 1,\n        remark: '',\n        timestamp: new Date(),\n        title: '',\n        status: 'published',\n        type: ''\n      }\n    },\n    handleCreate() {\n      this.resetTemp()\n      this.dialogStatus = 'create'\n      this.dialogFormVisible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    createData() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          this.temp.id = parseInt(Math.random() * 100) + 1024 // mock a id\n          this.temp.author = 'vue-element-admin'\n          createArticle(this.temp).then(() => {\n            this.list.unshift(this.temp)\n            this.dialogFormVisible = false\n            this.$notify({\n              title: 'Success',\n              message: 'Created Successfully',\n              type: 'success',\n              duration: 2000\n            })\n          })\n        }\n      })\n    },\n    handleUpdate(weibo_user_id) {\n      this.fullscreenLoading = true\n      createUserPortrait(weibo_user_id).then(response =>{\n        if (response.status === 200){\n          this.$message({\n            message:'画像生成成功，可点击查看！',\n            type:'success',\n            duration:1000\n          })\n          this.getList()\n        } else {\n          this.$message({\n            message:'不好，哪里出错了，画像生成失败！',\n            type:'error',\n            duration:1000\n          })\n        }\n        this.fullscreenLoading = false\n      })\n      // this.temp = Object.assign({}, row) // copy obj\n      // this.temp.timestamp = new Date(this.temp.timestamp)\n      // this.dialogStatus = 'update'\n      // this.dialogFormVisible = true\n      // this.$nextTick(() => {\n      //   this.$refs['dataForm'].clearValidate()\n      // })\n    },\n    updateData() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          const tempData = Object.assign({}, this.temp)\n          tempData.timestamp = +new Date(tempData.timestamp) // change Thu Nov 30 2017 16:41:05 GMT+0800 (CST) to 1512031311464\n          updateArticle(tempData).then(() => {\n            const index = this.list.findIndex(v => v.id === this.temp.id)\n            this.list.splice(index, 1, this.temp)\n            this.dialogFormVisible = false\n            this.$notify({\n              title: 'Success',\n              message: 'Update Successfully',\n              type: 'success',\n              duration: 2000\n            })\n          })\n        }\n      })\n    },\n    handleDelete(weibo_user_id) {\n      const that = this\n      that.$confirm('此操作将删除该微博用户的所有数据, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        deleteWeiboUser(weibo_user_id).then(response => {\n          if(response.status === 200){\n            that.$message({\n              message:'删除成功！',\n              type:'success',\n              duration:1000\n            })\n            that.getList()\n          }\n        })\n      }).catch(() => {\n        that.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    handleFetchPv(pv) {\n      fetchPv(pv).then(response => {\n        this.pvData = response.data.pvData\n        this.dialogPvVisible = true\n      })\n    },\n    handleDownload() {\n      this.downloadLoading = true\n      import('@/vendor/Export2Excel').then(excel => {\n        const tHeader = ['timestamp', 'title', 'type', 'importance', 'status']\n        const filterVal = ['timestamp', 'title', 'type', 'importance', 'status']\n        const data = this.formatJson(filterVal)\n        excel.export_json_to_excel({\n          header: tHeader,\n          data,\n          filename: 'table-list'\n        })\n        this.downloadLoading = false\n      })\n    },\n    formatJson(filterVal) {\n      return this.list.map(v => filterVal.map(j => {\n        if (j === 'timestamp') {\n          return parseTime(v[j])\n        } else {\n          return v[j]\n        }\n      }))\n    },\n    getSortClass: function(key) {\n      const sort = this.listQuery.sort\n      return sort === `+${key}` ? 'ascending' : 'descending'\n    }\n  }\n}\n</script>\n"]}]}