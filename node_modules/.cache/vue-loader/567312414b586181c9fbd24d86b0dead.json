{"remainingRequest":"/Users/justforstar/Desktop/GraduationProject/systemCode/front/vue-element-admin-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/justforstar/Desktop/GraduationProject/systemCode/front/vue-element-admin-master/src/views/table/system-user-table.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/justforstar/Desktop/GraduationProject/systemCode/front/vue-element-admin-master/src/views/table/system-user-table.vue","mtime":1619338134823},{"path":"/Users/justforstar/Desktop/GraduationProject/systemCode/front/vue-element-admin-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justforstar/Desktop/GraduationProject/systemCode/front/vue-element-admin-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/justforstar/Desktop/GraduationProject/systemCode/front/vue-element-admin-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justforstar/Desktop/GraduationProject/systemCode/front/vue-element-admin-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["system-user-table.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"system-user-table.vue","sourceRoot":"src/views/table","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-input v-model=\"listQuery.user_id\" placeholder=\"用户ID\" style=\"width: 150px;margin-left: 80px\"/>\n      <el-input v-model=\"listQuery.user_name\" placeholder=\"用户名\" style=\"width: 500px;\"/>\n      <el-select v-model=\"listQuery.is_admin\" placeholder=\"是否设为管理员\" style=\"width: 150px\">\n        <el-option v-for=\"item in calendarTypeOptions\" :key=\"item.key\" :label=\"item.display_name\" :value=\"item.key\" />\n      </el-select>\n<!--      <el-select v-model=\"listQuery.sort\" style=\"width: 140px\" class=\"filter-item\" @change=\"handleFilter\">-->\n<!--        <el-option v-for=\"item in sortOptions\" :key=\"item.key\" :label=\"item.label\" :value=\"item.key\" />-->\n<!--      </el-select>-->\n      <el-button style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-edit\" @click=\"handleCreate\">\n        Add\n      </el-button>\n    </div>\n\n    <el-table\n      :key=\"tableKey\"\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 100%;\"\n      @sort-change=\"sortChange\"\n    >\n      <el-table-column label=\"ID\" prop=\"id\" align=\"center\" width=\"80\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.id }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"用户ID\" width=\"150px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.user_id }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"用户名\" min-width=\"150px\">\n        <template slot-scope=\"{row}\">\n          <span class=\"link-type\">{{ row.user_name }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"上次登录时间\" width=\"110px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.last_login }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"是否为管理员\" class-name=\"status-col\" width=\"120\">\n        <template slot-scope=\"{row}\">\n          <el-tag :type=\"row.is_admin?'success':'warning'\">\n            {{ row.is_admin }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" align=\"center\" width=\"230\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"{row,$index}\">\n          <el-button type=\"primary\" size=\"mini\" @click=\"handleUpdate(row)\">\n            修改\n          </el-button>\n          <el-button v-if=\"row.status!='deleted'\" size=\"mini\" type=\"danger\" @click=\"handleDelete(row.user_id)\">\n            删除\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getList\" />\n\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n      <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"temp\" label-position=\"left\" label-width=\"70px\" style=\"width: 400px; margin-left:50px;\">\n        <el-form-item label=\"用户ID\" prop=\"temp\">\n          <el-input v-model=\"temp.user_id\" disabled />\n        </el-form-item>\n        <el-form-item label=\"用户名\" prop=\"temp\">\n          <el-input v-model=\"temp.user_name\" />\n        </el-form-item>\n        <el-form-item label=\"权限\" prop=\"temp\">\n          <el-switch v-model=\"temp.is_admin\" />\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">\n          取消\n        </el-button>\n        <el-button type=\"primary\" @click=updateData()>\n          确定\n        </el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog :visible.sync=\"dialogPvVisible\" title=\"Reading statistics\">\n      <el-table :data=\"pvData\" border fit highlight-current-row style=\"width: 100%\">\n        <el-table-column prop=\"key\" label=\"Channel\" />\n        <el-table-column prop=\"pv\" label=\"Pv\" />\n      </el-table>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"dialogPvVisible = false\">Confirm</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { fetchPv, createArticle } from '@/api/article'\nimport { fetchList, createUser, deleteSystemUser, updateSystemUser } from '@/api/system-user'\nimport waves from '@/directive/waves' // waves directive\nimport { parseTime } from '@/utils'\nimport Pagination from '@/components/Pagination/index' // secondary package based on el-pagination\n\nconst calendarTypeOptions = [\n  { key: true, display_name: '是' },\n  { key: false, display_name: '否' }\n]\n\n// arr to obj, such as { CN : \"China\", US : \"USA\" }\nconst calendarTypeKeyValue = calendarTypeOptions.reduce((acc, cur) => {\n  acc[cur.key] = cur.display_name\n  return acc\n}, {})\n\nexport default {\n  name: 'ComplexTable',\n  components: { Pagination },\n  directives: { waves },\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        published: 'success',\n        draft: 'info',\n        deleted: 'danger'\n      }\n      return statusMap[status]\n    },\n    typeFilter(type) {\n      return calendarTypeKeyValue[type]\n    }\n  },\n  data() {\n    return {\n      tableKey: 0,\n      list: null,\n      total: 0,\n      listLoading: false,\n      listQuery: {\n        user_id:'',\n        user_name:'',\n        is_admin:''\n      },\n      importanceOptions: [1, 2, 3],\n      calendarTypeOptions,\n      sortOptions: [{ label: 'ID Ascending', key: '+id' }, { label: 'ID Descending', key: '-id' }],\n      statusOptions: ['published', 'draft', 'deleted'],\n      showReviewer: false,\n      temp: {\n        user_id: '',\n        user_name:'',\n        is_admin:''\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: '修改系统用户信息',\n        create: 'Create'\n      },\n      dialogPvVisible: false,\n      pvData: [],\n      rules: {\n        type: [{ required: true, message: 'type is required', trigger: 'change' }],\n        timestamp: [{ type: 'date', required: true, message: 'timestamp is required', trigger: 'change' }],\n        title: [{ required: true, message: 'title is required', trigger: 'blur' }]\n      },\n      downloadLoading: false,\n      systemUserList: []\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    getList() {\n      fetchList(this.listQuery).then(response => {\n        this.list = response.data\n        for (let i =0;i<this.list.length;i++){\n          this.list[i][\"id\"]=i+1\n          if(this.list[i][\"last_login\"])\n            this.list[i][\"last_login\"] = this.list[i][\"last_login\"].toString().split(\"T\")[0]\n        }\n      })\n    },\n    handleFilter() {\n      this.listQuery.page = 1\n      this.getList()\n    },\n    handleModifyStatus(row, status) {\n      this.$message({\n        message: '操作Success',\n        type: 'success'\n      })\n      row.status = status\n    },\n    sortChange(data) {\n      const { prop, order } = data\n      if (prop === 'id') {\n        this.sortByID(order)\n      }\n    },\n    sortByID(order) {\n      if (order === 'ascending') {\n        this.listQuery.sort = '+id'\n      } else {\n        this.listQuery.sort = '-id'\n      }\n      this.handleFilter()\n    },\n    resetTemp() {\n      this.temp = {\n        id: undefined,\n        importance: 1,\n        remark: '',\n        timestamp: new Date(),\n        title: '',\n        status: 'published',\n        type: ''\n      }\n    },\n    handleCreate() {\n      createUser(this.listQuery).then(response => {\n        console.log(response)\n        if(response.status===200){\n          this.$message({\n            message:'添加成功!',\n            type:'success',\n          })\n          this.getList()\n          this.listQuery = {\n            user_id:'',\n            user_name:'',\n            is_admin:''\n          }\n        }\n      })\n    },\n    createData() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          this.temp.id = parseInt(Math.random() * 100) + 1024 // mock a id\n          this.temp.author = 'vue-element-admin'\n          createArticle(this.temp).then(() => {\n            this.list.unshift(this.temp)\n            this.dialogFormVisible = false\n            this.$notify({\n              title: 'Success',\n              message: 'Created Successfully',\n              type: 'success',\n              duration: 2000\n            })\n          })\n        }\n      })\n    },\n    handleUpdate(row) {\n      this.temp['user_id'] = row.user_id\n      this.temp['user_name'] = row.user_name\n      this.temp['is_admin'] = row.is_admin\n      this.dialogStatus = 'update'\n      this.dialogFormVisible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    updateData() {\n      updateSystemUser(this.temp).then(response => {\n        if(response.status===200){\n          this.dialogFormVisible = false\n          this.$message({\n            message:'修改成功！',\n            type:'success'\n          })\n          this.getList()\n        }\n      })\n      // this.$refs['dataForm'].validate((valid) => {\n      //   if (valid) {\n      //     const tempData = Object.assign({}, this.temp)\n      //     tempData.timestamp = +new Date(tempData.timestamp) // change Thu Nov 30 2017 16:41:05 GMT+0800 (CST) to 1512031311464\n      //     updateArticle(tempData).then(() => {\n      //       const index = this.list.findIndex(v => v.id === this.temp.id)\n      //       this.list.splice(index, 1, this.temp)\n      //       this.dialogFormVisible = false\n      //       this.$notify({\n      //         title: 'Success',\n      //         message: 'Update Successfully',\n      //         type: 'success',\n      //         duration: 2000\n      //       })\n      //     })\n      //   }\n      // })\n    },\n    handleDelete(user_id) {\n      // console.log(user_id)\n      deleteSystemUser(user_id).then(response => {\n        console.log(response)\n        if(response.status===200){\n          this.$message({\n            message:'删除成功！',\n            type:'success',\n          })\n          this.getList()\n        }\n      })\n    },\n    handleFetchPv(pv) {\n      fetchPv(pv).then(response => {\n        this.pvData = response.data.pvData\n        this.dialogPvVisible = true\n      })\n    },\n    handleDownload() {\n      this.downloadLoading = true\n      import('@/vendor/Export2Excel').then(excel => {\n        const tHeader = ['timestamp', 'title', 'type', 'importance', 'status']\n        const filterVal = ['timestamp', 'title', 'type', 'importance', 'status']\n        const data = this.formatJson(filterVal)\n        excel.export_json_to_excel({\n          header: tHeader,\n          data,\n          filename: 'table-list'\n        })\n        this.downloadLoading = false\n      })\n    },\n    formatJson(filterVal) {\n      return this.list.map(v => filterVal.map(j => {\n        if (j === 'timestamp') {\n          return parseTime(v[j])\n        } else {\n          return v[j]\n        }\n      }))\n    },\n    getSortClass: function(key) {\n      const sort = this.listQuery.sort\n      return sort === `+${key}` ? 'ascending' : 'descending'\n    }\n  }\n}\n</script>\n"]}]}