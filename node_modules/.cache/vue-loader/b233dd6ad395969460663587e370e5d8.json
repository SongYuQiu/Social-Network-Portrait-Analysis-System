{"remainingRequest":"/Users/justforstar/Desktop/GraduationProject/systemCode/front/vue-element-admin-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/justforstar/Desktop/GraduationProject/systemCode/front/vue-element-admin-master/src/views/profile/components/Account.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/justforstar/Desktop/GraduationProject/systemCode/front/vue-element-admin-master/src/views/profile/components/Account.vue","mtime":1620049296610},{"path":"/Users/justforstar/Desktop/GraduationProject/systemCode/front/vue-element-admin-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justforstar/Desktop/GraduationProject/systemCode/front/vue-element-admin-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/justforstar/Desktop/GraduationProject/systemCode/front/vue-element-admin-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justforstar/Desktop/GraduationProject/systemCode/front/vue-element-admin-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIGVjaGFydHMgZnJvbSAnZWNoYXJ0cycKaW1wb3J0ICdlY2hhcnRzLXdvcmRjbG91ZC9kaXN0L2VjaGFydHMtd29yZGNsb3VkLm1pbicKaW1wb3J0ICdlY2hhcnRzLXdvcmRjbG91ZC9kaXN0L2VjaGFydHMtd29yZGNsb3VkJwppbXBvcnQgeyBmZXRjaFVzZXJJbnRlcmVzdCB9IGZyb20gJ0AvYXBpL3dlaWJvLXVzZXInCnJlcXVpcmUoJ2VjaGFydHMvdGhlbWUvbWFjYXJvbnMnKSAvLyBlY2hhcnRzIHRoZW1lCgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGludGVyZXN0OiAnJywKICAgICAgd2VpYm9fdXNlcl9pZDogJycKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmluaXRDaGFydHMoKQogIH0sCiAgcHJvcHM6IHsKICAgIHdpZHRoOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJzEwMCUnCiAgICB9LAogICAgaGVpZ2h0OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJzMwMHB4JwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgaW5pdENoYXJ0cygpIHsKICAgICAgY29uc3QgdGhhdCA9IHRoaXMKICAgICAgdGhhdC53ZWlib191c2VyX2lkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3dlaWJvX3VzZXJfaWQnKQogICAgICBmZXRjaFVzZXJJbnRlcmVzdCh0aGF0LndlaWJvX3VzZXJfaWQpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgIHRoYXQuaW50ZXJlc3QgPSByZXNwb25zZS5kYXRhLmludGVyZXN0CiAgICAgICAgbGV0IG15Q2hhcnQyID0gZWNoYXJ0cy5pbml0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjaGFydDInKSwgJ21hY2Fyb25zJykKICAgICAgICBsZXQgd29yZF9saXN0ID0gdGhhdC5pbnRlcmVzdC50b1N0cmluZygpLnNwbGl0KCcgJykKICAgICAgICBsZXQgd29yZF9kYXRhX2xpc3QgPSBbXQogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgd29yZF9saXN0Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICB2YXIgbGVuZ3RoID0gd29yZF9saXN0Lmxlbmd0aAogICAgICAgICAgdmFyIHRlbXAgPSB7fQogICAgICAgICAgdGVtcFsnbmFtZSddID0gd29yZF9saXN0W2ldCiAgICAgICAgICB0ZW1wWyd2YWx1ZSddID0gKGxlbmd0aCAtIGkpICogMTAwMAogICAgICAgICAgdGVtcFsndGV4dFN0eWxlJ10gPSB0aGlzLmNyZWF0ZVRleHRDb2xvcigpCiAgICAgICAgICB3b3JkX2RhdGFfbGlzdFtpXSA9IHRlbXAKICAgICAgICB9CiAgICAgICAgbXlDaGFydDIuc2V0T3B0aW9uKHsKICAgICAgICAgIC8vIHRpdGxlOiB7CiAgICAgICAgICAvLyAgIHg6ICc1MCUnCiAgICAgICAgICAvLyB9LAogICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnI2ZmZicsCgogICAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgICBjZW50ZXI6IFsnNTAlJywgJzUwJSddLAogICAgICAgICAgICB0eXBlOiAnd29yZENsb3VkJywKICAgICAgICAgICAgLy/nlKjmnaXosIPmlbTor43kuYvpl7TnmoTot53nprsKICAgICAgICAgICAgZ3JpZFNpemU6IDM1LAogICAgICAgICAgICAvL+eUqOadpeiwg+aVtOWtl+eahOWkp+Wwj+iMg+WbtAoKICAgICAgICAgICAgc2l6ZVJhbmdlOiBbMTQsIDYwXSwKICAgICAgICAgICAgLy/nlKjmnaXosIPmlbTor43nmoTml4vovazmlrnlkJHvvIzvvIxbMCwwXS0t5Luj6KGo552A5rKh5pyJ6KeS5bqm77yM5Lmf5bCx5piv6K+N5Li65rC05bmz5pa55ZCR77yM6ZyA6KaB6K6+572u6KeS5bqm5Y+C6ICD5rOo6YeK5YaF5a65CiAgICAgICAgICAgIHJvdGF0aW9uUmFuZ2U6IFswLCAwXSwKICAgICAgICAgICAgZGF0YTogd29yZF9kYXRhX2xpc3QKICAgICAgICAgIH1dCiAgICAgICAgfSkKICAgICAgfSkKICAgIH0sCiAgICBjcmVhdGVUZXh0Q29sb3IoKXsKICAgICAgY29uc3QgbWFjcm9uID0gWycjMmVjN2M5JywgJyNiNmEyZGUnLCAnIzVhYjFlZicsICcjZmZiOTgwJywgJyNkODdhODAnLCAnIzhkOThiMycsICcjZTVjZjBkJywgJyM5N2I1NTInLAogICAgICAgICAgICAgICAgICAgICAgJyM5NTcwNmQnLCAnI2RjNjlhYScsICcjMDdhMmE0JywgJyM5YTdmZDEnLCAnIzU4OGRkNScsICcjZjU5OTRlJywgJyNjMDUwNTAnLCAnIzU5Njc4YycsCiAgICAgICAgICAgICAgICAgICAgICAnI2M5YWIwMCcsICcjN2ViMDBhJywgJyM2ZjU1NTMnLCAnI2MxNDA4OScgXQogICAgICB2YXIgaXRlbUNvbG9yID0gbWFjcm9uW01hdGguZmxvb3IoKE1hdGgucmFuZG9tKCkqbWFjcm9uLmxlbmd0aCkpXQogICAgICByZXR1cm4gewogICAgICAgIGNvbG9yOiBpdGVtQ29sb3IKICAgICAgfQogICAgfQogIH0KfQo="},{"version":3,"sources":["Account.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Account.vue","sourceRoot":"src/views/profile/components","sourcesContent":["<template>\n  <div id=\"chart2\" :style=\"{height:height,width:width}\" ref=\"chart2\"></div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\nimport 'echarts-wordcloud/dist/echarts-wordcloud.min'\nimport 'echarts-wordcloud/dist/echarts-wordcloud'\nimport { fetchUserInterest } from '@/api/weibo-user'\nrequire('echarts/theme/macarons') // echarts theme\n\nexport default {\n  data() {\n    return {\n      interest: '',\n      weibo_user_id: ''\n    }\n  },\n  mounted() {\n    this.initCharts()\n  },\n  props: {\n    width: {\n      type: String,\n      default: '100%'\n    },\n    height: {\n      type: String,\n      default: '300px'\n    }\n  },\n  methods: {\n    initCharts() {\n      const that = this\n      that.weibo_user_id = localStorage.getItem('weibo_user_id')\n      fetchUserInterest(that.weibo_user_id).then(response => {\n        that.interest = response.data.interest\n        let myChart2 = echarts.init(document.getElementById('chart2'), 'macarons')\n        let word_list = that.interest.toString().split(' ')\n        let word_data_list = []\n        for (var i = 0; i < word_list.length; i++) {\n          var length = word_list.length\n          var temp = {}\n          temp['name'] = word_list[i]\n          temp['value'] = (length - i) * 1000\n          temp['textStyle'] = this.createTextColor()\n          word_data_list[i] = temp\n        }\n        myChart2.setOption({\n          // title: {\n          //   x: '50%'\n          // },\n          backgroundColor: '#fff',\n\n          series: [{\n            center: ['50%', '50%'],\n            type: 'wordCloud',\n            //用来调整词之间的距离\n            gridSize: 35,\n            //用来调整字的大小范围\n\n            sizeRange: [14, 60],\n            //用来调整词的旋转方向，，[0,0]--代表着没有角度，也就是词为水平方向，需要设置角度参考注释内容\n            rotationRange: [0, 0],\n            data: word_data_list\n          }]\n        })\n      })\n    },\n    createTextColor(){\n      const macron = ['#2ec7c9', '#b6a2de', '#5ab1ef', '#ffb980', '#d87a80', '#8d98b3', '#e5cf0d', '#97b552',\n                      '#95706d', '#dc69aa', '#07a2a4', '#9a7fd1', '#588dd5', '#f5994e', '#c05050', '#59678c',\n                      '#c9ab00', '#7eb00a', '#6f5553', '#c14089' ]\n      var itemColor = macron[Math.floor((Math.random()*macron.length))]\n      return {\n        color: itemColor\n      }\n    }\n  }\n}\n</script>\n"]}]}